#include "pid.h"

/*----------------- 变量声明 --------------------*/

My_PID pid;

/*----------------- PID初始化 -------------------*/

void PID_Init(void)
{
	pid.Sv = 0;     				//-------------------------------------------------------------------------------------用户设定值 期望值
	
	pid.Kp = 2;     				//-------------------------------------------------------------------------------------用户设定值 比例系数（放大器）
	
	pid.Kp_P = 10;
	pid.Kp_I = 3;
	pid.Kp_D = 1;
	
	pid.Ek_1 = 0;
	pid.Ek_2 = 0;
	
	pid.Upper_bound = 50;		//-------------------------------------------------------------------------------------设置PID上边界
	pid.Lower_bound = -50;	
}

/*-----------------------------------------------*/

float PID_Output_Init(void)
{
	return 0;
}

/*----------------- PID计算 ------------------
输入期望值
输出PID计算后值
--------------------------------------------*/
float PID_calc(float Sv_value,float Pv_value)								
{
//	if(pid.CalcFlag < (pid.T / 10))//------------------------------------------------------------------------------判断标志位
//	{
//		return 0;
//	}	
	pid.Sv = Sv_value;
	pid.Pv = Pv_value;
	pid.Ek = pid.Sv - pid.Pv ;//-------------------------------------------------------------------------------------当前偏差
	
	pid.P_Output = pid.Kp * (pid.Ek - pid.Ek_1) ;//------------------------------------------------------------------比例项输出
	pid.I_Output = pid.Kp * pid.Ek ;//-------------------------------------------------------------------------------积分项输出
	pid.D_Output = pid.Kp * (pid.Ek - (2 * pid.Ek_1) + pid.Ek_2) ;//-------------------------------------------------微分项输出
	
	pid.Delt_Output = pid.Kp_P * pid.P_Output + pid.Kp_I * pid.I_Output + pid.Kp_D * pid.D_Output;//-----------------计算结果
	pid.Output += pid.Delt_Output;
	/*----------------------- 防止PID过调 --------------------------*/
	/*
	if(pid.Output > pid.Upper_bound)
	{
		pid.Output = pid.Upper_bound;
	}
	if(pid.Output < pid.Lower_bound)
	{
		pid.Output = pid.Lower_bound;
	}
	*/
	/*--------------------------------------------------------------*/

	pid.Ek_1 = pid.Ek;//--------------------------------------------------------------------------------------------更新数据
	pid.CalcFlag = 0;//---------------------------------------------------------------------------------------------清除标志位
	
	return pid.Output ;
}

